
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  10240;
}


http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access_log.log;
    # error_log   /var/log/nginx/error_log.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    # 开启gzip
    gzip on;

    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;

    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    gzip_comp_level 2;

    # 进行压缩的文件类型。javascript有多种形式，后面的图片压缩不需要的可以自行删除
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;

    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;

    # 设置压缩所需要的缓冲区大小
    gzip_buffers 4 16k;
    # http
    server{
        listen 80;
        # server_name aftersale.charmhigh.com;
        root  /usr/share/nginx/html;
        # rewrite ^(.*)$ https://$host$1 permanent;
        charset utf-8;
        client_max_body_size 200M;
        client_body_buffer_size 128k;

        location / {
            root  /usr/share/nginx/html;
            # root   /home/ruoyi/projects/ruoyi-ui;
			try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }
		
		location /prod-api/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_pass http://121.199.30.10:19000/;
			proxy_pass http://172.20.70.244:19000/;
		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    # ssl
    # server {
    #     listen 443 ssl;
    #     #配置HTTPS的默认访问端口为443。
    #     #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
    #     # 填写绑定证书的域名
    #     server_name aftersale.charmhigh.com;
    #     #把http的域名请求转成https
    #     # rewrite ^(.*)$ https://$host:18089$1 permanent;

    #     # ssl证书文件
    #     ssl_certificate cert/aftersale.charmhigh.com.pem;
    #     ssl_certificate_key cert/aftersale.charmhigh.com.key; 
    #     ssl_session_timeout 5m;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #     #表示使用的加密套件的类型。
    #     ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
    #     ssl_prefer_server_ciphers on;

    #     access_log  on;
    #     root  /usr/share/nginx/html;
    #     set  $chjdui_proxy_path  "http://172.20.70.244:18091";
    #     set  $chjdapi_proxy_path  "http://172.20.70.244:18090";
    #     set  $diskui_proxy_path  "http://172.20.70.244:18089";
    #     set  $diskapi_proxy_path  "http://172.20.70.244:18088";
        # client_max_body_size 2000M;

    #     add_header Strict-Transport-Security max-age=63072000;
    #     add_header X-Frame-Options sameorigin;
    #     add_header X-Content-Type-Options nosniff;
    #     #https->http代理出现的异常问题
    #     add_header Content-Security-Policy upgrade-insecure-requests;

    #     location / {
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #         try_files $uri $uri/ @router;
    #         index index.html;
    #     }
    #     location /api/ {
    #         rewrite ^/api/(.*) /$1 break;
    #         proxy_set_header X-Real-IP $remote_addr;

    #         proxy_set_header Host $http_host;
    #         proxy_pass $chjdapi_proxy_path;
    #         add_header Content-Security-Policy upgrade-insecure-requests;
    #     }
    #     location @router {
    #         rewrite ^.*$ /index.html last;
    #     }
    # }

}
